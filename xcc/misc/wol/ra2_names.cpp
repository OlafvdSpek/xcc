#include "ra2_names.h"

#include <boost/algorithm/string.hpp>
#include <xbt/bt_misc.h>

using namespace boost;

string get_country_name(int i)
{
	const char* country_names[] =
	{
		"America",
		"Korea",
		"France",
		"Germany",
		"Great Britain",
		"Libya",
		"Iraq",
		"Cuba",
		"Russia",
		"Yuri"
	};
	return i >= 0 && i < 10 ? country_names[i] : n(i);
}

string get_map_name(const string& v)
{
	struct t_key
	{
		const char* name;
		const char* value;
	} map_names[] =
	{
		"amazon01.map", "Stormy Weather",
		"mp01du.map", "South Pacific",
		"mp01t4.map", "South Pacific",
		"mp02t2.map", "Isle of War",
		"mp03t4.map", "Anytown, Amerika",
		"mp05du.map", "Heartland",
		"mp05mw.map", "Heartland",
		"mp05t4.map", "Heartland",
		"mp06mw.map", "Urban Rush",
		"mp06t2.map", "Urban Rush",
		"mp08mw.map", "Little Big Lake",
		"mp08t2.map", "Little Big Lake",
		"mp09du.map", "Canyon Fodder",
		"mp09t3.map", "Canyon Fodder",
		"mp10s4.map", "Depth Charge",
		"mp11t2.map", "Pinch Point",
		"mp12s4.map", "Lake Blitzen",
		"mp13du.map", "Montana DMZ",
		"mp13mw.map", "Montana DMZ",
		"mp13s4.map", "Montana DMZ",
		"mp14mw.map", "El Dorado",
		"mp14t2.map", "El Dorado",
		"mp15du.map", "Snow Valley",
		"mp15mw.map", "Snow Valley",
		"mp15s4.map", "Snow Valley",
		"mp16mw.map", "Snowball's Chance",
		"mp16s4.map", "Snowball's Chance",
		"mp17du.map", "Malibu Cliffs",
		"mp17mw.map", "Malibu Cliffs",
		"mp17t6.map", "Malibu Cliffs",
		"mp18du.map", "Cold War",
		"mp18s3.map", "Cold War",
		"mp19t4.map", "Golden State Fwy",
		"mp20t6.map", "Wild Animal Park",
		"mp21s2.map", "Alaskan Oil Spill",
		"mp22mw.map", "Arctic Circle",
		"mp22s8.map", "Arctic Circle",
		"mp23mw.map", "Hammer and Sickle",
		"mp23t4.map", "Hammer and Sickle",
		"mp24du.map", "Bonanza",
		"mp25du.map", "DEFCON 6",
		"mp25mw.map", "DEFCON 6",
		"mp25t6.map", "DEFCON 6",
		"mp26s6.map", "Bering Strait",
		"mp27du.map", "A Path Beyond II",
		"mp27mw.map", "A Path Beyond II",
		"mp27t8.map", "A Path Beyond II",
		"mp29mw.map", "The Alamo",
		"mp29u2.map", "The Alamo",
		"mp30mw.map", "Siberian Wastes",
		"mp30s6.map", "Siberian Wastes",
		"mp31s2.map", "May Day",
		"mp32du.map", "Heck Freezes Over",
		"mp32mw.map", "Heck Freezes Over",
		"mp32s8.map", "Heck Freezes Over",
		"mp33u4.map", "Paris Revisited",
		"mp34u4.map", "DC Uprising",
		"tn01mw.map", "Official Tournament Map A",
		"tn01t2.map", "Official Tournament Map A",
		"tn02mw.map", "Official Tournament Map",
		"tn02s4.map", "Official Tournament Map",
		"tn04mw.map", "Official Tournament Map B",
		"tn04t2.map", "Official Tournament Map B",
		"eb1.map", "City Under Siege",
		"eb2.map", "Sinkhole",
		"eb3.map", "Sovereign Land",
		"eb4.map", "Country Swing",
		"eb5.map", "Mount Olympus",

		"2peaks.map", "Twin Peaks",
		"arena33forever.map", "Arena 33 Forever",
		"austintx.map", "Austin, TX",
		"bldfeud.map", "Blood Feud",
		"bridgegap.map", "Bridging the Gap",
		"c1a01md.map", "Campaign 1 Map 1",
		"c1a02md.map", "Campaign 1 Map 2",
		"c1a03md.map", "Campaign 1 Map 3",
		"c2s01md.map", "Campaign 2 Map 1",
		"c2s02md.map", "Campaign 2 Map 2",
		"c2s03md.map", "Campaign 2 Map 3",
		"c3y01md.map", "Campaign 3 Map 1",
		"c3y02md.map", "Campaign 3 Map 2",
		"c3y03md.map", "Campaign 3 Map 3",
		"c4w01md.map", "Campaign 4 Map 1",
		"deathvalleygirl.map", "Death Valley Girl",
		"deathvalleygirlmw.map", "Death Valley Girl",
		"doubletrouble.map", "Double Trouble",
		"downtown.map", "Downtown, Cityville",
		"dryheat.map", "Dry Heat",
		"dryheatmw.map", "Dry Heat",
		"dunepatr.map", "Dune Patrol",
		"eastvsbest.map", "East vs Best",
		"facedown.map", "Face Down",
		"fight.map", "Let There Be Fight",
		"fourcorners.map", "Four Corners",
		"fourcornersmw.map", "Four Corners",
		"frstbite.map", "Frostbite",
		"groundze.map", "Ground Zero",
		"groundzemw.map", "Ground Zero",
		"hidvally.map", "Hidden Valley",
		"hillbtwn.map", "A Hill Between",
		"isleofoades.map", "Isle Of Oades",
		"manhatta.map", "Manhattan Mayhem",
		"monumentvalley.map", "Monument Valley",
		"monumentvalleymw.map", "Monument Valley",
		"mountmoras.map", "Mount Rush More",
		"nearoref.map", "Near Ore Far",
		"nowimps.map", "No Wimps",
		"offensedefense.map", "Offense Defense",
		"ottersrevenge.map", "Otters Revenge",
		"pcofdune.map", "Little Piece of Dune",
		"rushhr.map", "Rush Hour",
		"saharami.map", "Sahara Mirage",
		"saharamimw.map", "Sahara Mirage",
		"sedonapass.map", "Sedona Pass",
		"sedonapassmw.map", "Sedona Pass",
		"topothehill.map", "Top o'the Hill",
		"tourofegypt.map", "Tour Of Egypt",
		"trailerpark.map", "Trailer Park",
		"triplecrossed.map", "Triple Crossed (3-6)",
		"turfwar.map", "Turfwar",
		"xamazon01.map", "Stormy Weather",
		"xarena.map", "Arena",
		"xbarrel.map", "Loaded Barrel",
		"xbayopigs.map", "Bay of Pigs",
		"xbermuda.map", "Bermuda Triangle",
		"xbreak.map", "Breakaway",
		"xcarville.map", "Carville's Convoy",
		"xdeadman.map", "Deadman's Ridge",
		"xdeath.map", "Death trap",
		"xdisaster.map", "Brink of Disaster",
		"xdustbowl.map", "Dustbowl",
		"xdustbowlmw.map", "Dustbowl",
		"xeb1.map", "City Under Siege",
		"xeb1mw.map", "City Under Siege",
		"xeb2.map", "Sinkhole",
		"xeb3.map", "Sovereign Land",
		"xeb4.map", "Country Swing",
		"xeb5.map", "Mount Olympus",
		"xgoldst.map", "Streets of Gold",
		"xgrinder.map", "Meat Grinder",
		"xhailmary.map", "Hail Mary",
		"xhills.map", "Head for the Hills",
		"xinvasion.map", "Invasion Confirmed",
		"xkaliforn.map", "Kalifornia",
		"xkiller.map", "Killer Instinct",
		"xlostlake.map", "Lost Lake",
		"xmp01du.map", "South Pacific",
		"xmp01t4.map", "South Pacific",
		"xmp02t2.map", "Isle of War",
		"xmp03t4.map", "Anytown, Amerika",
		"xmp05du.map", "Heartland",
		"xmp05mw.map", "Heartland",
		"xmp05t4.map", "Heartland",
		"xmp06mw.map", "Urban Rush",
		"xmp06t2.map", "Urban Rush",
		"xmp08mw.map", "Little Big Lake",
		"xmp08t2.map", "Little Big Lake",
		"xmp09du.map", "Canyon Fodder",
		"xmp09t3.map", "Canyon Fodder",
		"xmp10s4.map", "Depth Charge",
		"xmp11t2.map", "Pinch Point",
		"xmp12s4.map", "Lake Blitzen",
		"xmp13du.map", "Montana DMZ",
		"xmp13mw.map", "Montana DMZ",
		"xmp13s4.map", "Montana DMZ",
		"xmp14mw.map", "El Dorado",
		"xmp14t2.map", "El Dorado",
		"xmp15du.map", "Snow Valley",
		"xmp15mw.map", "Snow Valley",
		"xmp15s4.map", "Snow Valley",
		"xmp16mw.map", "Snowball's Chance",
		"xmp16s4.map", "Snowball's Chance",
		"xmp17du.map", "Malibu Cliffs",
		"xmp17mw.map", "Malibu Cliffs",
		"xmp17t6.map", "Malibu Cliffs",
		"xmp18du.map", "Cold War",
		"xmp18s3.map", "Cold War",
		"xmp19t4.map", "Golden State Fwy",
		"xmp20t6.map", "Wild Animal Park",
		"xmp21s2.map", "Alaskan Oil Spill",
		"xmp22mw.map", "Arctic Circle",
		"xmp22s8.map", "Arctic Circle",
		"xmp23mw.map", "Hammer and Sickle",
		"xmp23t4.map", "Hammer and Sickle",
		"xmp24du.map", "Bonanza",
		"xmp25du.map", "DEFCON 6",
		"xmp25mw.map", "DEFCON 6",
		"xmp25t6.map", "DEFCON 6",
		"xmp26s6.map", "Bering Strait",
		"xmp27du.map", "A Path Beyond II",
		"xmp27mw.map", "A Path Beyond II",
		"xmp27t8.map", "A Path Beyond II",
		"xmp29mw.map", "The Alamo",
		"xmp29u2.map", "The Alamo",
		"xmp30mw.map", "Siberian Wastes",
		"xmp30s6.map", "Siberian Wastes",
		"xmp31s2.map", "May Day",
		"xmp32du.map", "Heck Freezes Over",
		"xmp32mw.map", "Heck Freezes Over",
		"xmp32s8.map", "Heck Freezes Over",
		"xmp33u4.map", "Paris Revisited",
		"xmp34u4.map", "DC Uprising",
		"xnewhghts.map", "New Heights",
		"xnorest.map", "No Rest for the Wicked",
		"xoceansid.map", "Oceanside",
		"xpacific.map", "Pacific Heights",
		"xpacificmw.map", "Pacific Heights",
		"xpotomac.map", "Army of the Potomac",
		"xpowdrkeg.map", "Powder Keg",
		"xrockets.map", "Rockets Red Glare",
		"xroulette.map", "Russian Roulette",
		"xround.map", "Roundhouse Kick",
		"xseaofiso.map", "Sea of Isolation",
		"xshrapnel.map", "Shrapnel Mountain",
		"xtanyas.map", "Tanya's Training Grounds",
		"xterritor.map", "Territorial Imperative",
		"xtn01mw.map", "Official Tournament Map A",
		"xtn01t2.map", "Official Tournament Map A",
		"xtn02mw.map", "Official Tournament Map",
		"xtn02s4.map", "Official Tournament Map",
		"xtn04mw.map", "Official Tournament Map B",
		"xtn04t2.map", "Official Tournament Map B",
		"xtower.map", "Tower of Power",
		"xtowermw.map", "Tower of Power",
		"xtsunami.map", "Tsunami",
		"xvalley.map", "Valley of Gems",
		"xvalleymw.map", "Valley of Gems",
		"xxmas.map", "Happy Trails",
		"xyuriplot.map", "Yuri's Plot",
		NULL
	};
	for (t_key* i = map_names; i->name; i++)
	{
		if (iequals(i->name, v))
			return i->value;
	}
	return v;
}

string get_mode_name(int i)
{
	const char* names[] =
	{
		"",
		"Battle",
		"Free For All",
		"Cooperative",
		"Unholy Alliance",
		"Megawealth",
		"Land Rush",
		"Meat Grinder",
		"Naval War",
	};
	return i >= 1 && i < 9 ? names[i] : n(i);
}

string get_ra2_building_name(int v)
{
	struct t_key
	{
		int index;
		const char* value;
	} building_names[] =
	{
		0, "app",
		1, "aor",
		2, "acy",
		3, "ab",
		4, "gasand",
		5, "gadept",
		6, "abl",
		7, "awf",
		8, "calab",
		9, "spp",
		10, "sbl",
		11, "sb",
		12, "gawall",
		13, "sr",
		14, "swf",
		15, "sor",
		16, "nawall",
		17, "cahse07",
		18, "napsis",
		19, "nawast",
		20, "sg",
		21, "nasam",
		22, "garadr",
		23, "any",
		24, "ic",
		25, "scy",
		26, "sd",
		27, "gacsph",
		28, "gadumy",
		29, "gaweat",
		30, "cabhut",
		31, "galite",
		32, "redlamp",
		33, "grenlamp",
		34, "bluelamp",
		35, "yelwlamp",
		36, "purplamp",
		37, "inoranlamp",
		38, "ingrnlmp",
		39, "inredlmp",
		40, "inblulmp",
		41, "city01",
		42, "city02",
		43, "city03",
		44, "city04",
		45, "city05",
		46, "city06",
		47, "cahosp",
		48, "ingalite",
		49, "inyelwlamp",
		50, "inpurplamp",
		51, "neglamp",
		52, "negred",
		53, "tesla",
		54, "namisl",
		55, "atesla",
		56, "caarmr",
		57, "tstlamp",
		58, "nahpad",
		59, "ammocrat",
		60, "gagreen",
		61, "sny",
		62, "ss",
		63, "gg",
		64, "gtgcan",
		65, "nr",
		66, "pb",
		67, "fk",
		68, "caoutp",
		69, "cathosp",
		70, "tap",
		71, "tod",
		72, "cv",
		73, "op",
		74, "cacity01",
		75, "cacity02",
		76, "cacity03",
		77, "cacity04",
		78, "canewy01",
		79, "canewy04",
		80, "canewy05",
		81, "caswst01",
		82, "catech01",
		83, "catexs01",
		84, "catexs02",
		85, "cawash01",
		86, "cafarm01",
		87, "cafarm02",
		88, "calit01e",
		89, "calit01n",
		90, "calit01s",
		91, "calit01w",
		92, "camisc01",
		93, "camisc02",
		94, "camisc03",
		95, "camisc04",
		96, "capol01e",
		97, "capol01n",
		98, "capol01s",
		99, "capol01w",
		100, "casin01e",
		101, "casin01n",
		102, "casin01s",
		103, "casin01w",
		104, "capars01",
		105, "ar",
		106, "cafrma",
		107, "cafrmb",
		108, "cawash05",
		109, "cawash04",
		110, "cawash03",
		111, "cawash07",
		112, "cawash11",
		113, "cawsh12",
		114, "cawash14",
		115, "cawash09",
		116, "cawash10",
		117, "cawash13",
		118, "caarmy01",
		119, "causfgl",
		120, "cawash08",
		121, "calit03e",
		122, "calit03n",
		123, "calit03s",
		124, "calit03w",
		125, "calit02l",
		126, "calit02r",
		127, "cahse01",
		128, "cawt01",
		129, "cats01",
		130, "cabarn02",
		131, "cawa2a",
		132, "cawa2b",
		133, "cawa2c",
		134, "cawa2d",
		135, "ar",
		136, "caprs03",
		137, "cagard01",
		138, "carus01",
		139, "camiam01",
		140, "caeuro01",
		141, "camiam02",
		142, "canwy05",
		143, "mayan",
		144, "caeur1",
		145, "caeur2",
		146, "caeur04",
		147, "camex01",
		148, "carus02a",
		149, "carus02b",
		150, "carus02c",
		151, "carus02d",
		152, "carus02e",
		153, "carus02f",
		154, "canewy06",
		155, "canewy07",
		156, "canewy08",
		157, "capars02",
		158, "capars08",
		159, "capars09",
		160, "carus03",
		161, "canewy10",
		162, "canewy11",
		163, "canewy12",
		164, "canewy13",
		165, "canewy14",
		166, "canewy15",
		167, "canewy16",
		168, "canewy17",
		169, "canewy18",
		170, "capars04",
		171, "capars05",
		172, "capars06",
		173, "capars07",
		174, "cawash15",
		175, "capars10",
		176, "capars13",
		177, "capars14",
		178, "cagas01",
		179, "capars11",
		180, "capars12",
		181, "cafarm06",
		182, "camiam04",
		183, "napsyb",
		184, "napsya",
		185, "caind01",
		186, "cacolo01",
		187, "canwy09",
		188, "canwy22",
		189, "canwy23",
		190, "canwy24",
		191, "canwy25",
		192, "canwy26",
		193, "catexs03",
		194, "catexs04",
		195, "catexs05",
		196, "carus02g",
		197, "cachig04",
		198, "camiam03",
		199, "carus07",
		200, "catexs06",
		201, "catexs07",
		202, "catexs08",
		203, "cachig01",
		204, "cachig02",
		205, "cachig03",
		206, "cawash16",
		207, "cawash17",
		208, "cachig05",
		209, "cawash19",
		210, "carus08",
		211, "carus09",
		212, "carus10",
		213, "carus11",
		214, "canewy20",
		215, "canewy21",
		216, "carus04",
		217, "carus05",
		218, "carus06",
		219, "camsc01",
		220, "camsc02",
		221, "camsc03",
		222, "camsc04",
		223, "camsc05",
		224, "camsc06",
		225, "camsc07",
		226, "cawash18",
		227, "caeuro05",
		228, "capark01",
		229, "capark02",
		230, "capark03",
		231, "cahse02",
		232, "cahse03",
		233, "cahse04",
		234, "castrt01",
		235, "castrt02",
		236, "castl01",
		237, "castl02",
		238, "castl03",
		239, "castl04",
		240, "napsya",
		241, "cahse05",
		242, "cahse06",
		243, "camiam05",
		244, "camiam06",
		245, "camiam07",
		246, "cafncb",
		247, "cafncw",
		248, "camex02",
		249, "camex03",
		250, "camex04",
		251, "camex05",
		252, "cachig06",
		253, "camsc08",
		254, "camsc09",
		255, "caarmy02",
		256, "caarmy03",
		257, "caarmy04",
		258, "temmorlamp",
		259, "temdaylamp",
		260, "temduslamp",
		261, "temnitlamp",
		262, "snomorlamp",
		263, "snodaylamp",
		264, "snoduslamp",
		265, "snonitlamp",
		266, "cakrmw",
		267, "carufgl",
		268, "cafrfgl",
		269, "cairsfgl",
		270, "cacufgl",
		271, "caskfgl",
		272, "calbfgl",
		273, "camiam08",
		274, "camisc05",
		275, "camisc06",
		276, "castl05a",
		277, "castl05b",
		278, "castl05c",
		279, "castl05d",
		280, "castl05e",
		281, "castl05f",
		282, "castl05g",
		283, "castl05h",
		284, "camsc10",
		285, "cagefgl",
		286, "caukfgl",
		287, "cawash06",
		288, "camsc11",
		289, "camsc12",
		290, "camsc13",
		291, "capofgl",
		292, "camsc12a",
		293, "camov01",
		294, "camov02",
		295, "cabunk01",
		296, "cabunk02",
		297, "cafncp",
		298, "castrt03",
		299, "castrt04",
		300, "castrt05",
		301, "yacnst",
		302, "yapowr",
		303, "yabrck",
		304, "yaweap",
		305, "yayard",
		306, "yadept",
		307, "yatech",
		308, "gafwll",
		309, "yaggun",
		310, "yapsyt",
		311, "naindp",
		312, "yagrnd",
		313, "yagntc",
		314, "caslab",
		315, "catime",
		316, "yappet",
		317, "calond04",
		318, "calond05",
		319, "calond06",
		320, "camoon01",
		321, "catran03",
		322, "caeast01",
		323, "caegyp01",
		324, "caegyp02",
		325, "caegyp03",
		326, "cala01",
		327, "cala02",
		328, "cala03",
		329, "cala04",
		330, "cala05",
		331, "calond01",
		332, "calond02",
		333, "calond03",
		334, "camorr01",
		335, "camorr02",
		336, "camorr03",
		337, "casanf01",
		338, "casanf02",
		339, "casanf03",
		340, "casanf04",
		341, "casanf05",
		342, "caseat01",
		343, "natbnk",
		344, "gagate_a",
		345, "casanf09",
		346, "casanf10",
		347, "casanf11",
		348, "casanf12",
		349, "casanf13",
		350, "casanf14",
		351, "casanf06",
		352, "casanf07",
		353, "casanf08",
		354, "caseat02",
		355, "yacomd",
		356, "yapppt",
		357, "garobo",
		358, "yarefn",
		359, "yarock",
		360, "nabnkr",
		361, "casanf15",
		362, "casanf16",
		363, "casanf17",
		364, "casanf18",
		365, "casin03e",
		366, "casin03s",
		367, "caurb01",
		368, "caurb02",
		369, "caurb03",
		370, "capowr",
		371, "cala07",
		372, "caegyp06",
		373, "cala08",
		374, "caeast02",
		375, "cabarr01",
		376, "cabarr02",
		377, "camorr04",
		378, "camorr05",
		379, "cala09",
		380, "caegyp04",
		381, "caegyp05",
		382, "cala06",
		383, "camorr06",
		384, "camorr07",
		385, "camorr08",
		386, "camorr09",
		387, "camorr10",
		388, "catime01",
		389, "catime02",
		390, "cala10",
		391, "cala11",
		392, "cala12",
		393, "cala13",
		394, "capark04",
		395, "capark05",
		396, "capark06",
		397, "cala14",
		398, "cala15",
		399, "cabunk03",
		400, "cabunk04",
		401, "calunr01",
		402, "calunr02",
		-1
	};
	t_key* i = building_names;
	while (i->index != -1 && i->index != v)
		i++;
	return i->index != -1 ? i->value : n(v);
}

string get_ra2_infantry_name(int v)
{
	struct t_key
	{
		int index;
		const char* value;
	} infantry_names[] =
	{
		0, "gi",
		1, "conscript",
		2, "tt",
		3, "engineer",
		4, "rocketeer",
		5, "ghost",
		6, "yuri",
		7, "ivan",
		8, "deso",
		9, "sdog",
		10, "civ1",
		11, "civ2",
		12, "civ3",
		13, "ctech",
		14, "weedguy",
		15, "cleg",
		16, "spy",
		17, "ccomand",
		18, "ptroop",
		19, "civan",
		20, "yuripr",
		21, "snipe",
		22, "cow",
		23, "all",
		24, "tany",
		25, "flakt",
		26, "terror",
		27, "sengineer",
		28, "adog",
		29, "vladimir",
		30, "pentgen",
		31, "pres",
		32, "ssrv",
		33, "civa",
		34, "civb",
		35, "civc",
		36, "civbbp",
		37, "civbfm",
		38, "civbf",
		39, "civbtm",
		40, "civsfm",
		41, "civsf",
		42, "civstm",
		43, "polarb",
		44, "josh",
		45, "yengineer",
		46, "ggi",
		47, "init",
		48, "boris",
		49, "brute",
		50, "virus",
		51, "clnt",
		52, "arnd",
		53, "stln",
		54, "caml",
		55, "eins",
		56, "mumy",
		57, "rmnv",
		58, "lunr",
		59, "dnoa",
		60, "dnob",
		61, "slav",
		62, "wwlf",
		63, "ydog",
		64, "yadog",
		-1
	};
	t_key* i = infantry_names;
	while (i->index != -1 && i->index != v)
		i++;
	return i->index != -1 ? i->value : n(v);
}

string get_ra2_plane_name(int v)
{
	struct t_key
	{
		int index;
		const char* value;
	} plane_names[] =
	{
		0, "apache",
		1, "harrier",
		2, "hornet",
		3, "v3rocket",
		4, "asw",
		5, "dmisl",
		6, "pdplane",
		7, "black eagle",
		8, "cargoplane",
		9, "bpln",
		10, "spyp",
		11, "cmisl",
		-1
	};
	t_key* i = plane_names;
	while (i->index != -1 && i->index != v)
		i++;
	return i->index != -1 ? i->value : n(v);
}

string get_ra2_vehicle_name(int v)
{
	struct t_key
	{
		int index;
		const char* value;
	} vehicle_names[] =
	{
		0, "amcv",
		1, "wm",
		2, "apoc",
		3, "rt",
		4, "at",
		5, "car",
		6, "bus",
		7, "wini",
		8, "pick",
		9, "gt",
		10, "horv",
		11, "trucka",
		12, "truckb",
		13, "carrier",
		14, "v3",
		15, "zep",
		16, "td",
		17, "ft",
		18, "dest",
		19, "sub",
		20, "aegis",
		21, "lcrf",
		22, "dred",
		23, "shad",
		24, "sqd",
		25, "dlph",
		26, "smcv",
		27, "tnkd",
		28, "howi",
		29, "ttnk",
		30, "hind",
		31, "ltnk",
		32, "cmon",
		33, "cm",
		34, "sref",
		35, "xcomet",
		36, "hyd",
		37, "mt",
		38, "ifv",
		39, "deathdummy",
		40, "vlad",
		41, "dtruck",
		42, "propa",
		43, "cona",
		44, "cop",
		45, "euroc",
		46, "limo",
		47, "stang",
		48, "suvb",
		49, "suvw",
		50, "taxi",
		51, "ptruck",
		52, "cruise",
		53, "tug",
		54, "cdest",
		55, "yhvr",
		56, "pcv",
		57, "smin",
		58, "smon",
		59, "ycab",
		60, "ytnk",
		61, "bfrt",
		62, "tele",
		63, "caos",
		64, "ddbx",
		65, "bcab",
		66, "bsub",
		67, "schp",
		68, "jeep",
		69, "mind",
		70, "disk",
		71, "utnk",
		72, "robo",
		73, "ydum",
		74, "schd",
		75, "doly",
		76, "cblc",
		77, "ftrk",
		78, "ambu",
		79, "civp",
		-1
	};
	t_key* i = vehicle_names;
	while (i->index != -1 && i->index != v)
		i++;
	return i->index != -1 ? i->value : n(v);
}

